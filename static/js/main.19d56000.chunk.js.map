{"version":3,"sources":["contexts/ModalContext.tsx","components/MovieCard.tsx","components/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ModalContext","createContext","ModalProvider","children","useState","movie","setMovie","containerRef","useRef","useEffect","document","body","classList","toggle","Provider","value","className","onClick","e","X","clientX","Y","clientY","container","current","getBoundingClientRect","left","top","right","bottom","ref","title","vote_average","src","backdrop_path","alt","overview","MovieCard","props","useContext","loading","Home","movies","setMovies","fetch","then","res","json","data","results","id","map","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAQaA,EAAeC,wBAAc,IAiD3BC,EAhDiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBC,mBAAuB,MADD,mBACzCC,EADyC,KAClCC,EADkC,KAG1CC,EAAeC,iBAAuB,MAE5CC,qBAAU,WACRC,SAASC,KAAKC,UAAUC,OAAO,iBAA4B,OAAVR,KAChD,CAACA,IAeJ,OACE,eAACL,EAAac,SAAd,CAAuBC,MAAO,CAAEV,QAAOC,YAAvC,UACGH,EACAE,GACC,qBAAKW,UAAU,UAAUC,QAjBc,SAACC,GAC5C,IAAMC,EAAID,EAAEE,QACNC,EAAIH,EAAEI,QACNC,EAAYhB,EAAaiB,QAC/B,GAAID,EAAW,CAAC,IAAD,EACwBA,EAAUE,wBAAvCC,EADK,EACLA,KAAMC,EADD,EACCA,IAAKC,EADN,EACMA,MAAOC,EADb,EACaA,OAC1B,GAAIH,GAAQP,GAAKS,GAAST,GAAKQ,GAAON,GAAKQ,GAAUR,EACnD,OAEFf,EAAS,QAQP,SACE,qBAAKU,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAec,IAAKvB,EAAnC,UACE,oBAAIS,UAAU,eAAd,SAA8BX,EAAM0B,QACpC,oBAAIf,UAAU,SAAd,SAAwBX,EAAM2B,eAC9B,qBACEC,IAAG,yCAAoC5B,EAAM6B,eAC7CC,IAAK9B,EAAM0B,MACXf,UAAU,WAEZ,mBAAGA,UAAU,qBAAb,SAAmCX,EAAM+B,WACzC,wBAAQpB,UAAU,eAAeC,QAAS,kBAAMX,EAAS,OAAzD,8BCvBC+B,EAnBoB,SAACC,GAAW,IACrChC,EAAaiC,qBAAWvC,GAAxBM,SACR,OACE,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,SACf,yBAAQA,UAAU,OAAOC,QAAS,kBAAMX,EAASgC,IAAjD,UACE,oBAAItB,UAAU,cAAd,SAA6BsB,EAAMP,QACnC,oBAAIf,UAAU,SAAd,SAAwBsB,EAAMN,eAC9B,qBACEC,IAAG,yCAAoCK,EAAMJ,eAC7CC,IAAKG,EAAMP,MACXf,UAAU,SACVwB,QAAQ,gBCaHC,EAzBF,WAAO,IAAD,EACWrC,mBAAkB,IAD7B,mBACVsC,EADU,KACFC,EADE,KAWjB,OARAlC,qBAAU,WACRmC,MACE,uFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUL,EAAUK,EAAKC,cAChC,IAGD,mCACE,sBAAKjC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qCACA,qBAAKkC,GAAG,SAAR,SACGR,EAAOS,KAAI,SAAC9C,GAAD,OACV,wBAAC,EAAD,2BAAeA,GAAf,IAAsB+C,IAAK/C,EAAM6C,iBCR9BG,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCMSC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,SAG1BX,M","file":"static/js/main.19d56000.chunk.js","sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\r\nimport { Movie } from \"../ts/type\";\r\n\r\ninterface Context {\r\n  movie: Movie | null;\r\n  setMovie: React.Dispatch<React.SetStateAction<Movie | null>>;\r\n}\r\n\r\nexport const ModalContext = createContext({} as Context);\r\nconst ModalProvider: React.FC = ({ children }) => {\r\n  const [movie, setMovie] = useState<Movie | null>(null);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.toggle(\"overlay-active\", movie !== null);\r\n  }, [movie]);\r\n\r\n  const handleClose: React.MouseEventHandler = (e) => {\r\n    const X = e.clientX;\r\n    const Y = e.clientY;\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      const { left, top, right, bottom } = container.getBoundingClientRect();\r\n      if (left <= X && right >= X && top <= Y && bottom >= Y) {\r\n        return;\r\n      }\r\n      setMovie(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ movie, setMovie }}>\r\n      {children}\r\n      {movie && (\r\n        <div className=\"overlay\" onClick={handleClose}>\r\n          <div className=\"movie-detail-container\">\r\n            <div className=\"movie-detail\" ref={containerRef}>\r\n              <h2 className=\"detail-title\">{movie.title}</h2>\r\n              <h4 className=\"rating\">{movie.vote_average}</h4>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w400${movie.backdrop_path}`}\r\n                alt={movie.title}\r\n                className=\"poster\"\r\n              />\r\n              <p className=\"detail-description\">{movie.overview}</p>\r\n              <button className=\"detail-close\" onClick={() => setMovie(null)}>\r\n                CLOSE\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { ModalContext } from \"../contexts/ModalContext\";\r\nimport { Movie } from \"../ts/type\";\r\n\r\nconst MovieCard: React.FC<Movie> = (props) => {\r\n  const { setMovie } = useContext(ModalContext);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"glow\"></div>\r\n      <button className=\"card\" onClick={() => setMovie(props)}>\r\n        <h3 className=\"movie-title\">{props.title}</h3>\r\n        <h4 className=\"rating\">{props.vote_average}</h4>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w400${props.backdrop_path}`}\r\n          alt={props.title}\r\n          className=\"poster\"\r\n          loading=\"lazy\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Movie } from \"../ts/type\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=d04742a1e9e55575ea0a3bb3c47a88c5\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setMovies(data.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Most Popular Movie List</h1>\r\n        <div id=\"movies\">\r\n          {movies.map((movie) => (\r\n            <MovieCard {...movie} key={movie.id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport ModalProvider from \"./contexts/ModalContext\";\n\nfunction App() {\n  return (\n    <ModalProvider>\n      <Home />\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}