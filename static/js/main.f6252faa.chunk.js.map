{"version":3,"sources":["contexts/AppContext.tsx","components/MovieCard.tsx","components/Home.tsx","components/Wishlist.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppContext","createContext","AppProviter","children","useState","movie","setMovie","movies","setMovies","useEffect","fetch","then","res","json","data","wishlist","JSON","parse","localStorage","getItem","results","map","m","includes","id","containerRef","useRef","document","body","classList","toggle","Provider","value","className","onClick","e","X","clientX","Y","clientY","container","current","getBoundingClientRect","left","top","right","bottom","ref","toggleTo","push","splice","indexOf","setItem","stringify","xmlns","viewBox","fill","fillRule","d","clipRule","title","vote_average","src","backdrop_path","alt","overview","MovieCard","props","useContext","loading","Home","to","key","Wishlist","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6252faa.chunk.js","sourcesContent":["import { createContext, useEffect, useRef, useState } from \"react\";\r\nimport { Movie } from \"../ts/type\";\r\n\r\ninterface Context {\r\n  movie: Movie | null;\r\n  setMovie: React.Dispatch<React.SetStateAction<Movie | null>>;\r\n  movies: Movie[];\r\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\r\n}\r\n\r\nexport const AppContext = createContext({} as Context);\r\nconst AppProviter: React.FC = ({ children }) => {\r\n  const [movie, setMovie] = useState<Movie | null>(null);\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=d04742a1e9e55575ea0a3bb3c47a88c5\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const wishlist: number[] = JSON.parse(\r\n          localStorage.getItem(\"wishlist\") || \"[]\"\r\n        );\r\n        setMovies(\r\n          data.results.map((m: any) => ({\r\n            ...m,\r\n            wishlist: wishlist.includes(m.id),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.toggle(\"overlay-active\", movie !== null);\r\n  }, [movie]);\r\n\r\n  const handleClose: React.MouseEventHandler = (e) => {\r\n    const X = e.clientX;\r\n    const Y = e.clientY;\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      const { left, top, right, bottom } = container.getBoundingClientRect();\r\n      if (left <= X && right >= X && top <= Y && bottom >= Y) {\r\n        return;\r\n      }\r\n      setMovie(null);\r\n    }\r\n  };\r\n\r\n  const toggleWishlist = () => {\r\n    if (movie) {\r\n      const toggleTo = !movie.wishlist;\r\n      setMovie({ ...movie, wishlist: toggleTo });\r\n      setMovies(\r\n        movies.map((m) =>\r\n          m.id === movie.id ? { ...m, wishlist: toggleTo } : m\r\n        )\r\n      );\r\n      const wishlist: number[] = JSON.parse(\r\n        localStorage.getItem(\"wishlist\") || \"[]\"\r\n      );\r\n      if (toggleTo) {\r\n        wishlist.push(movie.id);\r\n      } else {\r\n        wishlist.splice(wishlist.indexOf(movie.id), 1);\r\n      }\r\n      localStorage.setItem(\"wishlist\", JSON.stringify(wishlist));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{ movie, setMovie, movies, setMovies }}>\r\n      {children}\r\n      {movie && (\r\n        <div className=\"overlay\" onClick={handleClose}>\r\n          <div className=\"movie-detail-container\">\r\n            <div className=\"movie-detail\" ref={containerRef}>\r\n              <button\r\n                className={`love-icon ${\r\n                  movie.wishlist ? \"love-icon-check\" : \"\"\r\n                }`}\r\n                onClick={toggleWishlist}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n              <h2 className=\"detail-title\">{movie.title}</h2>\r\n              <h4 className=\"rating\">{movie.vote_average}</h4>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w400${movie.backdrop_path}`}\r\n                alt={movie.title}\r\n                className=\"poster\"\r\n              />\r\n              <p className=\"detail-description\">{movie.overview}</p>\r\n              <button className=\"detail-close\" onClick={() => setMovie(null)}>\r\n                CLOSE\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProviter;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport { Movie } from \"../ts/type\";\r\n\r\nconst MovieCard: React.FC<Movie> = (props) => {\r\n  const { setMovie } = useContext(AppContext);\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"glow\"></div>\r\n      <button className=\"card\" onClick={() => setMovie(props)}>\r\n        <h3 className=\"movie-title\">{props.title}</h3>\r\n        <h4 className=\"rating\">{props.vote_average}</h4>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w400${props.backdrop_path}`}\r\n          alt={props.title}\r\n          className=\"poster\"\r\n          loading=\"lazy\"\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst Home = () => {\r\n  const { movies } = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Most Popular Movie List</h1>\r\n        <div className=\"wishlist\">\r\n          <Link to=\"/movie-react/wishlist\">Wishlist</Link>\r\n        </div>\r\n        <div id=\"movies\">\r\n          {movies.map((movie) => (\r\n            <MovieCard {...movie} key={movie.id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nconst Wishlist = () => {\r\n  const { movies } = useContext(AppContext);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Wishlist</h1>\r\n        <div className=\"wishlist\">\r\n          <Link to=\"/movie-react\">back</Link>\r\n        </div>\r\n        <div id=\"movies\">\r\n          {movies.map(\r\n            (movie) => movie.wishlist && <MovieCard {...movie} key={movie.id} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Wishlist from \"./components/Wishlist\";\nimport AppProvider from \"./contexts/AppContext\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/movie-react\" element={<Home />} />\n          <Route path=\"/movie-react/wishlist\" element={<Wishlist />} />\n        </Routes>\n      </BrowserRouter>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}